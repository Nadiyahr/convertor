{"version":3,"sources":["store/types.ts","store/index.ts","api/consts.ts","api/index.ts","store/actions.ts","store/selectors.ts","components/search/search.tsx","components/Exchange/exchange.tsx","components/ListCurr/currenciesList.tsx","App.tsx","index.tsx"],"names":["ActionsTypes","initialState","currencies","fromCurr","toCurr","arrDataFilter","exchangeRates","base","renderOutput","invert","store","createStore","state","action","type","SetCurrencies","payload","SetFrom","SetTo","SetArrDataFilter","SetExchangeRates","SetBase","SetRenderOutput","SetInvert","composeWithDevTools","myHeaders","Date","toLocaleDateString","Headers","append","exch","getJsonApiArray","setFromActionCreator","setToActionCreator","setArrDataFilterActionCreator","SetRenderOutputActionCreator","SetInvertActionCreator","getCurrenciesSelector","getFromSlector","getToSelector","getArrDataFilter","grtExchangeRates","getBase","getRenderOutput","getInvert","Search","props","dispatch","useDispatch","arrData","useSelector","fromValue","toValue","baseValue","invrert","useState","internFrom","setInternFrom","internTo","setInternTo","internBase","setInternBase","displaySelect","setDisplaySelect","console","log","from","onClickLi","str","slice","useEffect","length","className","htmlFor","style","textTransform","placeholder","name","id","value","typeProps","setValue","onChange","e","ev","typeS","target","toUpperCase","filtredArr","filter","data","toLowerCase","includes","onCange","onFocus","maxLength","onClick","prev","icon","faCaretUp","faCaretDown","map","join","Exchange","selectedFrom","selectedTo","renderResult","amount","setAmount","convertAmount","setConvertAmount","convertRes","a","preventDefault","isNaN","newFrom","replace","trim","newTo","find","x","event","handleChange","faRotate","CurrenciesList","exchangeArr","combineArr","Object","entries","item","Number","toFixed","App","to","role","path","element","ReactDOM","render","document","getElementById"],"mappings":"yQAkBYA,E,+EAAAA,K,8BAAAA,E,kBAAAA,E,cAAAA,E,6BAAAA,E,oCAAAA,E,kBAAAA,E,kCAAAA,E,uBAAAA,M,KCdZ,IAAMC,EAAsB,CAC1BC,WAAY,GACZC,SAAU,wBACVC,OAAQ,2BACRC,cAAe,GACfC,cAAe,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,OAC9CC,KAAM,MACNC,cAAc,EACdC,QAAQ,GA0DGC,EAAQC,aAvDoB,WAA0C,IAAzCC,EAAwC,uDAAhCX,EAAcY,EAAkB,uCAChF,OAAQA,EAAOC,MACb,KAAKd,EAAae,cAChB,OAAO,2BACFH,GADL,IAEEV,WAAW,GAAD,mBAAMU,EAAMV,YAAZ,YAA2BW,EAAOG,YAGhD,KAAKhB,EAAaiB,QAChB,OAAO,2BACFL,GADL,IAEET,SAAUU,EAAOG,UAGrB,KAAKhB,EAAakB,MAChB,OAAO,2BACFN,GADL,IAEER,OAAQS,EAAOG,UAGnB,KAAKhB,EAAamB,iBAChB,OAAO,2BACFP,GADL,IAEEP,cAAeQ,EAAOG,UAG1B,KAAKhB,EAAaoB,iBAChB,OAAO,2BACFR,GADL,IAEEN,cAAc,GAAD,mBAAMM,EAAMN,eAAZ,YAA8BO,EAAOG,YAGtD,KAAKhB,EAAaqB,QAChB,OAAO,2BACFT,GADL,IAEEL,KAAMM,EAAOG,UAGjB,KAAKhB,EAAasB,gBAMlB,KAAKtB,EAAauB,UAChB,OAAO,2BACFX,GADL,IAEEJ,aAAcK,EAAOG,UAGzB,QACE,OAAOJ,KAI6BY,e,uDClEpCC,IADc,IAAIC,MAAOC,mBAAmB,SAChC,IAAIC,SAGtBH,EAAUI,OAAO,SAAU,oCAEpB,IA8GMC,EAAO,CAClB,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,UACP,IAAO,YACP,IAAO,WACP,IAAO,UACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,UACP,IAAO,WACP,IAAO,WACP,IAAO,aACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,aACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,aACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,UACP,IAAO,UACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,aACP,IAAO,UACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,aACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,cACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,aACP,IAAO,YACP,IAAO,YACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,aACP,IAAO,YACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,aACP,IAAO,WACP,IAAO,YACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,WACP,IAAO,SACP,IAAO,aACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,UACP,IAAO,WACP,IAAO,WACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,aACP,IAAO,YACP,IAAO,WACP,IAAO,aACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,YACP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","file":"static/js/main.39150509.chunk.js","sourcesContent":["import { Action as BaseAction } from 'redux';\n\nexport interface State {\n  currencies: string[][]\n  // currencies: Currency[],\n  fromCurr: string,\n  toCurr: string,\n  arrDataFilter: string[][],\n  exchangeRates: string[],\n  base: string,\n  renderOutput: boolean,\n  invert: boolean,\n}\n\nexport interface Action<T, P> extends BaseAction<T> {\n  payload: P,\n}\n\nexport enum ActionsTypes {\n  SetCurrencies = 'SetCurrencies',\n  SetFrom = 'SetFrom',\n  SetTo = 'SetTo',\n  SetArrDataFilter = 'SetFilter',\n  SetExchangeRates = 'SetExchangeRates',\n  SetBase = 'SetBase',\n  SetRenderOutput = 'SetRenderOutput',\n  SetInvert = 'SetInvert',\n}\n\nexport type SetCurrenciesAction = Action<ActionsTypes.SetCurrencies, string[][]>;\nexport type SetFromAction = Action<ActionsTypes.SetFrom, string>;\nexport type SetToAction = Action<ActionsTypes.SetTo, string>;\nexport type SetArrDataFilterAction = Action<ActionsTypes.SetArrDataFilter, string[][]>;\nexport type SetExchangeRatesAction = Action<ActionsTypes.SetExchangeRates, string[]>;\nexport type SetBaseAction = Action<ActionsTypes.SetBase, string>;\nexport type SetRenderOutputAction = Action<ActionsTypes.SetRenderOutput, boolean>;\nexport type SetInvertAction = Action<ActionsTypes.SetInvert, boolean>;\n\n\nexport type Actions = SetCurrenciesAction\n  | SetFromAction\n  | SetToAction\n  | SetArrDataFilterAction\n  | SetExchangeRatesAction\n  | SetBaseAction\n  | SetRenderOutputAction\n  | SetInvertAction;\n","import { createStore, Reducer } from 'redux';\nimport { composeWithDevTools } from '@redux-devtools/extension';\nimport { State, Actions, ActionsTypes } from './types';\n\nconst initialState: State = {\n  currencies: [],\n  fromCurr: 'UAH Ukrainian Hryvnia',\n  toCurr: 'USD United States Dollar',\n  arrDataFilter: [],\n  exchangeRates: ['USD','EUR','PLN','CZK','GBP','UAH'],\n  base: 'UAH',\n  renderOutput: true,\n  invert: false,\n};\n\nconst reducer: Reducer<State, Actions> = (state = initialState, action): State => {\n  switch (action.type) {\n    case ActionsTypes.SetCurrencies:\n      return {\n        ...state,\n        currencies: [...state.currencies, ...action.payload],\n      };\n\n    case ActionsTypes.SetFrom:\n      return {\n        ...state,\n        fromCurr: action.payload,\n      };\n\n    case ActionsTypes.SetTo:\n      return {\n        ...state,\n        toCurr: action.payload,\n      };\n\n    case ActionsTypes.SetArrDataFilter:\n      return {\n        ...state,\n        arrDataFilter: action.payload,\n      };\n\n    case ActionsTypes.SetExchangeRates:\n      return {\n        ...state,\n        exchangeRates: [...state.exchangeRates, ...action.payload],\n      };\n\n    case ActionsTypes.SetBase:\n      return {\n        ...state,\n        base: action.payload,\n      };\n\n    case ActionsTypes.SetRenderOutput:\n      return {\n        ...state,\n        renderOutput: action.payload,\n      };\n\n    case ActionsTypes.SetInvert:\n      return {\n        ...state,\n        renderOutput: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, composeWithDevTools());\n","export const currencyHttp = 'http://free.currconv.com';\nexport const apiKey = 'dd3f60ee0680556feb45';\nexport const BASE_URL = 'https://api.apilayer.com/fixer';\nexport const date = new Date().toLocaleDateString('en-CA');\nconst myHeaders = new Headers();\n\n//myHeaders.append('apikey'', 'QcNkBWCbg01lRNKI6H64YumEVU0shxS7');\nmyHeaders.append('apikey', 'VrLd2rRsJm6EN0BsvafaQkLbWvU2jl91');\n\nexport const requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n};\n\nconst obj ={'aaa': 'eeee'};\n\nobj['aaa'];\n\nexport const arr = [['AED', 'United Arab Emirates Dirham'],\n['AFN', 'Afghan Afghani'],\n['ALL', 'Albanian Lek'],\n['AMD', 'Armenian Dram'],\n['ANG', 'Netherlands Antillean Guilder'],\n['AOA', 'Angolan Kwanza'],\n['ARS', 'Argentine Peso'],\n['AUD', 'Australian Dollar'],\n['AWG', 'Aruban Florin'],\n['AZN', 'Azerbaijani Manat'],\n['BAM', 'Bosnia-Herzegovina Convertible Mark'],\n['BBD', 'Barbadian Dollar'],\n['BDT', 'Bangladeshi Taka'],\n['BGN', 'Bulgarian Lev'],\n['BHD', 'Bahraini Dinar'],\n['BIF', 'Burundian Franc'],\n['BMD', 'Bermudan Dollar'],\n['BND', 'Brunei Dollar'],\n['BOB', 'Bolivian Boliviano'],\n['BRL', 'Brazilian Real'],\n['BSD', 'Bahamian Dollar'],\n['BTC', 'Bitcoin'],\n['BTN', 'Bhutanese Ngultrum'],\n['BWP', 'Botswanan Pula'],\n['BYN', 'New Belarusian Ruble'],\n['BYR', 'Belarusian Ruble'],\n['BZD', 'Belize Dollar'],\n['CAD', 'Canadian Dollar'],\n['CDF', 'Congolese Franc'],\n['CHF', 'Swiss Franc'],\n['CLF', 'Chilean Unit of Account (UF)'],\n['CLP', 'Chilean Peso'],\n['CNY', 'Chinese Yuan'],\n['COP', 'Colombian Peso'],\n['CRC', 'Costa Rican Colón'],\n['CUC', 'Cuban Convertible Peso'],\n['CUP', 'Cuban Peso'],\n['CVE', 'Cape Verdean Escudo'],\n['CZK', 'Czech Republic Koruna'],\n['DJF', 'Djiboutian Franc'],\n['DKK', 'Danish Krone'],\n['DOP', 'Dominican Peso'],\n['DZD', 'Algerian Dinar'],\n['EGP', 'Egyptian Pound'],\n['ERN', 'Eritrean Nakfa'],\n['ETB', 'Ethiopian Birr'],\n['EUR', 'Euro'],\n['FJD', 'Fijian Dollar'],\n['FKP', 'Falkland Islands Pound'],\n['GBP', 'British Pound Sterling'],\n['GEL', 'Georgian Lari'],\n['GGP', 'Guernsey Pound'],\n['GHS', 'Ghanaian Cedi'],\n['GIP', 'Gibraltar Pound'],\n['GMD', 'Gambian Dalasi'],\n['GNF', 'Guinean Franc'],\n['GTQ', 'Guatemalan Quetzal'],\n['GYD', 'Guyanaese Dollar'],\n['HKD', 'Hong Kong Dollar'],\n['HNL', 'Honduran Lempira'],\n['HRK', 'Croatian Kuna'],\n['HTG', 'Haitian Gourde'],\n['HUF', 'Hungarian Forint'],\n['IDR', 'Indonesian Rupiah'],\n['ILS', 'Israeli New Sheqel'],\n['IMP', 'Manx pound'],\n['INR', 'Indian Rupee'],\n['IQD', 'Iraqi Dinar'],\n['IRR', 'Iranian Rial'],\n['ISK', 'Icelandic Króna'],\n['JEP', 'Jersey Pound'],\n['JMD', 'Jamaican Dollar'],\n['JOD', 'Jordanian Dinar'],\n['JPY', 'Japanese Yen'],\n['KES', 'Kenyan Shilling'],\n['KGS', 'Kyrgystani Som'],\n['KHR', 'Cambodian Riel'],\n['KMF', 'Comorian Franc'],\n['KPW', 'North Korean Won'],\n['KRW', 'South Korean Won'],\n['KWD', 'Kuwaiti Dinar'],\n['KYD', 'Cayman Islands Dollar'],\n['KZT', 'Kazakhstani Tenge'],\n['LAK', 'Laotian Kip'],\n['LBP', 'Lebanese Pound'],\n['LKR', 'Sri Lankan Rupee'],\n['LRD', 'Liberian Dollar'],\n['LSL', 'Lesotho Loti'],\n['LTL', 'Lithuanian Litas'],\n['LVL', 'Latvian Lats'],\n['LYD', 'Libyan Dinar'],\n['MAD', 'Moroccan Dirham'],\n['MDL', 'Moldovan Leu'],\n['MGA', 'Malagasy Ariary'],\n['MKD', 'Macedonian Denar'],\n['MMK', 'Myanma Kyat'],\n['MNT', 'Mongolian Tugrik'],\n['MOP', 'Macanese Pataca'],\n['MRO', 'Mauritanian Ouguiya'],\n['MUR', 'Mauritian Rupee']];\n\nexport const exch = {\n  'AED': '0.121438',\n  'AFN': '2.859945',\n  'ALL': '3.769014',\n  'AMD': '15.683688',\n  'ANG': '0.05958',\n  'AOA': '13.411497',\n  'ARS': '3.845101',\n  'AUD': '0.04671',\n  'AWG': '0.059345',\n  'AZN': '0.056336',\n  'BAM': '0.061059',\n  'BBD': '0.066748',\n  'BDT': '2.857763',\n  'BGN': '0.061271',\n  'BHD': '0.012468',\n  'BIF': '66.883246',\n  'BMD': '0.033061',\n  'BND': '0.045741',\n  'BOB': '0.22728',\n  'BRL': '0.168015',\n  'BSD': '0.033059',\n  'BTC': '9.49609e-7',\n  'BTN': '2.537083',\n  'BWP': '0.402176',\n  'BYN': '0.111558',\n  'BYR': '648.003771',\n  'BZD': '0.066634',\n  'CAD': '0.042577',\n  'CDF': '65.626925',\n  'CHF': '0.032701',\n  'CLF': '0.001029',\n  'CLP': '28.39944',\n  'CNY': '0.220404',\n  'COP': '133.882208',\n  'CRC': '21.958318',\n  'CUC': '0.033061',\n  'CUP': '0.876128',\n  'CVE': '3.467317',\n  'CZK': '0.784386',\n  'DJF': '5.875688',\n  'DKK': '0.23325',\n  'DOP': '1.82335',\n  'DZD': '4.810565',\n  'EGP': '0.611249',\n  'ERN': '0.495921',\n  'ETB': '1.699485',\n  'EUR': '0.031344',\n  'FJD': '0.071991',\n  'FKP': '0.025412',\n  'GBP': '0.026793',\n  'GEL': '0.100343',\n  'GGP': '0.025412',\n  'GHS': '0.248788',\n  'GIP': '0.025412',\n  'GMD': '1.779532',\n  'GNF': '292.511013',\n  'GTQ': '0.25348',\n  'GYD': '6.918612',\n  'HKD': '0.259527',\n  'HNL': '0.808364',\n  'HRK': '0.236161',\n  'HTG': '3.636478',\n  'HUF': '11.973205',\n  'IDR': '479.345912',\n  'ILS': '0.112455',\n  'IMP': '0.025412',\n  'INR': '2.544243',\n  'IQD': '48.269669',\n  'IRR': '1396.844876',\n  'ISK': '4.352548',\n  'JEP': '0.025412',\n  'JMD': '5.115431',\n  'JOD': '0.023442',\n  'JPY': '4.316764',\n  'KES': '3.835136',\n  'KGS': '2.714389',\n  'KHR': '134.064057',\n  'KMF': '15.427285',\n  'KPW': '29.755279',\n  'KRW': '42.025702',\n  'KWD': '0.010153',\n  'KYD': '0.027549',\n  'KZT': '14.523685',\n  'LAK': '419.384085',\n  'LBP': '50.154181',\n  'LKR': '11.735696',\n  'LRD': '4.975868',\n  'LSL': '0.528665',\n  'LTL': '0.097622',\n  'LVL': '0.019999',\n  'LYD': '0.158377',\n  'MAD': '0.330432',\n  'MDL': '0.620831',\n  'MGA': '132.444048',\n  'MKD': '1.924551',\n  'MMK': '61.209459',\n  'MNT': '99.014421',\n  'MOP': '0.267287',\n  'MRO': '11.80292',\n  'MUR': '1.430489',\n  'MVR': '0.511142',\n  'MWK': '26.928648',\n  'MXN': '0.667325',\n  'MYR': '0.144491',\n  'MZN': '2.110323',\n  'NAD': '0.528665',\n  'NGN': '13.726782',\n  'NIO': '1.182619',\n  'NOK': '0.313069',\n  'NPR': '4.059395',\n  'NZD': '0.051585',\n  'OMR': '0.012735',\n  'PAB': '0.033058',\n  'PEN': '0.12522',\n  'PGK': '0.116058',\n  'PHP': '1.73227',\n  'PKR': '6.169383',\n  'PLN': '0.1478',\n  'PYG': '225.712643',\n  'QAR': '0.120378',\n  'RON': '0.155125',\n  'RSD': '3.686437',\n  'RUB': '2.198706',\n  'RWF': '33.722645',\n  'SAR': '0.12401',\n  'SBD': '0.266949',\n  'SCR': '0.428771',\n  'SDG': '14.795106',\n  'SEK': '0.328991',\n  'SGD': '0.045803',\n  'SHP': '0.045539',\n  'SLL': '229.975227',\n  'SOS': '19.175633',\n  'SRD': '0.688935',\n  'STD': '684.304579',\n  'SVC': '0.289246',\n  'SYP': '83.06514',\n  'SZL': '0.528664',\n  'THB': '1.135341',\n  'TJS': '0.411729',\n  'TMT': '0.115715',\n  'TND': '0.101103',\n  'TOP': '0.076631',\n  'TRY': '0.494104',\n  'TTD': '0.224264',\n  'TWD': '0.980669',\n  'TZS': '76.867805',\n  'UAH': '1',\n  'UGX': '117.751367',\n  'USD': '0.033061',\n  'UYU': '1.364491',\n  'UZS': '368.221651',\n  'VEF': '7069530126.547045',\n  'VND': '758.974417',\n  'VUV': '3.722109',\n  'WST': '0.085478',\n  'XAF': '20.479209',\n  'XAG': '0.001479',\n  'XAU': '0.000017555139',\n  'XCD': '0.08935',\n  'XDR': '0.02458',\n  'XOF': '20.646974',\n  'XPF': '3.754136',\n  'YER': '8.273632',\n  'ZAR': '0.531258',\n  'ZMK': '297.592545',\n  'ZMW': '0.561989',\n  'ZWL': '10.645763'\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { arr, BASE_URL, exch, requestOptions } from \"./consts\";\n\n\nexport const getJsonApiArray = arr;\n// (): Promise<string[][]> => {\n//   return fetch(`${BASE_URL}/symbols`, requestOptions)\n//     .then(res => res.text())\n//     .then(result => JSON.parse(result))\n//     .then(data => Object.entries(data.symbols));\n// };\n\nexport const getExchangeRates = (amount: string, from: string, to: string) => {\n  return fetch(`${BASE_URL}/convert?to=${to.slice(0,3)}&from=${from.slice(0,3)}&amount=${amount}`, requestOptions)\n    .then(response => response.text())\n    .then(result => JSON.parse(result));\n};\n\nexport const getExchangeratesData = exch;\n// (base = 'UAH') => {\n//   return fetch(`${BASE_URL}/latest?base=${base.slice(0,35)}`, requestOptions)\n//     .then(res => res.text())\n//     .then(result => JSON.parse(result));\n// };\n\n// fetch(\"https://api.apilayer.com/fixer/latest?symbols={symbols}&base={base}\", requestOptions)\n//   .then(response => response.text())\n//   .then(result => console.log(result))\n//   .catch(error => console.log('error', error));\n\n//https://api.apilayer.com/exchangerates_data/{date}?symbols={symbols}&base={base}\", requestOptions)\n\n// export const getJsonApiArray = (): Promise<Currency[]> => {\n//   return fetch(`${currencyHttp}/api/v7/currencies?apiKey=${apiKey}`)\n//     .then(res => res.json())\n//     .then(result => Object.values(result.results));\n// };\n\n// export const getExchangeRates = (from: string, to: string) => {\n//   return fetch(`${currencyHttp}/api/v7/convert?q=${from}_${to},${to}_${from}&compact=ultra&apiKey=${apiKey}`)\n//     .then(res => res.json())\n//     .then(result => result);\n// };\n","import {\n  ActionsTypes, SetArrDataFilterAction, SetBaseAction, SetCurrenciesAction, SetExchangeRatesAction, SetFromAction, SetInvertAction, SetRenderOutputAction, SetToAction,\n} from './types';\n\nexport const setCurrenciesActionCreator = (payload: string[][]): SetCurrenciesAction => ({\n  type: ActionsTypes.SetCurrencies,\n  payload,\n});\n\nexport const setFromActionCreator = (payload: string): SetFromAction => ({\n  type: ActionsTypes.SetFrom,\n  payload,\n});\n\nexport const setToActionCreator = (payload: string): SetToAction => ({\n  type: ActionsTypes.SetTo,\n  payload,\n});\n\nexport const setArrDataFilterActionCreator = (payload: string[][]): SetArrDataFilterAction => ({\n  type: ActionsTypes.SetArrDataFilter,\n  payload,\n});\n\nexport const setExchangeRatesActionCreator = (payload: string[]): SetExchangeRatesAction => ({\n  type: ActionsTypes.SetExchangeRates,\n  payload,\n});\n\nexport const SetBaseActionCreator = (payload: string): SetBaseAction => ({\n  type: ActionsTypes.SetBase,\n  payload,\n});\n\nexport const SetRenderOutputActionCreator = (payload: boolean): SetRenderOutputAction => ({\n  type: ActionsTypes.SetRenderOutput,\n  payload,\n});\n\nexport const SetInvertActionCreator = (payload: boolean): SetInvertAction => ({\n  type: ActionsTypes.SetInvert,\n  payload,\n});\n","import { State } from './types';\n\nexport const getCurrenciesSelector = (state: State): string[][] => state.currencies;\nexport const getFromSlector = (state: State): string => state.fromCurr;\nexport const getToSelector = (state: State): string => state.toCurr;\nexport const getArrDataFilter = (state: State): string[][] => state.arrDataFilter;\nexport const grtExchangeRates = (state: State): string[] => state.exchangeRates;\nexport const getBase = (state: State): string => state.base;\nexport const getRenderOutput = (state: State): boolean => state.renderOutput;\nexport const getInvert = (state: State): boolean => state.invert;\n\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport './search.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFromSlector, getCurrenciesSelector, getToSelector, getArrDataFilter, getBase, getInvert } from '../../store/selectors';\nimport { setArrDataFilterActionCreator, SetBaseActionCreator, setCurrenciesActionCreator, setFromActionCreator, SetInvertActionCreator, SetRenderOutputActionCreator, setToActionCreator } from '../../store/actions';\nimport { getJsonApiArray } from '../../api';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  type: string,\n};\n\nexport const Search: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const { type } = props;\n  const arrData = useSelector(getCurrenciesSelector);\n  const fromValue = useSelector(getFromSlector);\n  const toValue = useSelector(getToSelector);\n  const baseValue = useSelector(getBase);\n  const arrDataFilter = useSelector(getArrDataFilter);\n  const invrert = useSelector(getInvert);\n  const [internFrom, setInternFrom] = useState(fromValue);\n  const [internTo, setInternTo] = useState(toValue);\n  const [internBase, setInternBase] = useState(baseValue);\n  const [displaySelect, setDisplaySelect] = useState(false);\n\n  if (invrert) {\n    console.log(invrert);\n    const from = internFrom;\n\n    setInternFrom(internTo);\n    setInternTo(from);\n    dispatch(SetInvertActionCreator(false));\n  }\n\n  const setValue = (typeProps: string) => {\n\n    switch (typeProps){\n      case 'from':\n        return internFrom;\n\n      case 'to':\n        return internTo;\n\n      case 'base':\n        return internBase.slice(0,3);\n\n      default:\n        break;\n    }\n  };\n\n  const clickDown = () => {\n    setDisplaySelect(prev => !prev);\n  };\n\n  const onFocus = () => {\n    setDisplaySelect(true);\n    dispatch(SetRenderOutputActionCreator(false));\n\n    switch (type) {\n      case 'from':\n        setInternFrom('');\n        return internFrom;\n\n      case 'to':\n        setInternTo('');\n        return internTo;\n\n      case 'base':\n        setInternBase('');\n        return internBase;\n\n      default:\n        break;\n    }\n  };\n\n  const onCange = (ev: React.ChangeEvent<HTMLInputElement>, typeS: string) => {\n    const { value } = ev.target;\n\n    setDisplaySelect(true);\n\n    switch (typeS) {\n      case 'from':\n        setInternFrom(value.toUpperCase());\n        break;\n\n      case 'to':\n        setInternTo(value.toUpperCase());\n        break;\n\n      case 'base':\n        setInternBase(value.toUpperCase());\n        break;\n\n      default:\n        break;\n    }\n\n    const filtredArr = arrData.filter((data: string[]) => value === ''\n      ? data\n      : data[0].toLowerCase().includes(value.toLowerCase()));\n\n    console.log(filtredArr);\n    dispatch(setArrDataFilterActionCreator(filtredArr));\n    console.log(arrDataFilter);\n  };\n\n  const onClickLi = (str: string, type: string) => {\n    switch (type) {\n      case 'from':\n        dispatch(setFromActionCreator(str));\n        setInternFrom(str);\n        return fromValue;\n\n      case 'to':\n        dispatch(setToActionCreator(str));\n        setInternTo(str);\n        return toValue;\n\n      case 'base':\n        dispatch(SetBaseActionCreator(str.slice(0,3)));\n        setInternBase(str.slice(0,3));\n        return baseValue;\n\n        default:\n          break;\n    }\n  };\n\n  useEffect(() => {\n    if (arrData.length === 0) {\n      dispatch(setArrDataFilterActionCreator(getJsonApiArray));\n    }\n  }, []);\n\n  return (\n    <div className=\"search\">\n      <label htmlFor=\"curr\" style={{textTransform: 'capitalize'}}>\n        {type}\n        <input\n          type=\"text\"\n          placeholder=\"Start typting for filter\"\n          className=\"search__input\"\n          name=\"currencies\"\n          id=\"curr\"\n          value={setValue(type)}\n          onChange={(e) => onCange(e, type)}\n          onFocus={onFocus}\n          maxLength={3}\n        />\n        <div className=\"search__icon\" onClick={clickDown}>\n        {displaySelect\n        ? <FontAwesomeIcon icon={faCaretUp} />\n        : <FontAwesomeIcon icon={faCaretDown} />}\n        </div>\n      </label>\n      {displaySelect && (\n        <ul className=\"search__list list-group\">\n          {arrDataFilter.map((data: string[]) => (\n            <li\n              className=\"search__item list-group-item list-group-item-action\"\n              key={data[0]}\n              onClick={() => {\n                onClickLi(data.join(' '), type);\n                setDisplaySelect(false);\n              }}\n            >\n              {data.join(' ')}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getJsonApiArray } from '../../api';\nimport { SetInvertActionCreator, setCurrenciesActionCreator, setFromActionCreator, SetRenderOutputActionCreator, setToActionCreator } from '../../store/actions';\nimport { getCurrenciesSelector, getFromSlector, getInvert, getRenderOutput, getToSelector } from '../../store/selectors';\nimport { Search } from '../search';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRotate } from '@fortawesome/free-solid-svg-icons';\nimport './exchange.scss';\n\nexport const Exchange = () => {\n  const dispatch = useDispatch();\n  const currencies = useSelector(getCurrenciesSelector);\n  const selectedFrom = useSelector(getFromSlector);\n  const selectedTo = useSelector(getToSelector);\n  const renderResult = useSelector(getRenderOutput);\n  const invert = useSelector(getInvert);\n  const [amount, setAmount] = useState('');\n  const [convertAmount, setConvertAmount] = useState(0);\n  \n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'selectedFrom':\n        dispatch(setFromActionCreator(value));\n        break;\n\n      case 'selectedTo':\n        dispatch(setToActionCreator(value));\n        break;\n\n      case 'amount':\n        setAmount(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const invertCurrencies = () => {\n    dispatch(SetInvertActionCreator(true));\n    console.log(invert);\n  };\n\n  const convertRes = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    dispatch(SetRenderOutputActionCreator(true));\n    if (isNaN(+amount)) {\n      const newFrom = amount.replace(/\\d/g, '').trim().slice(0,3).toUpperCase();\n      const newTo = amount.replace(/\\d/g, '').trim().slice(-3).toUpperCase();\n      setAmount(amount.replace(/\\D/g, ''));\n      dispatch(setFromActionCreator(currencies.find(x => x[0] === newFrom)!.join(' ')));\n      dispatch(setToActionCreator(currencies.find(x => x[0] === newTo)!.join(' ')));\n    }\n    console.log(amount, selectedFrom.slice(0,3), selectedTo.slice(0,3));\n    // const getExchange: Result = await getExchangeRates(amount, selectedFrom, selectedTo);\n    // console.log(getExchange.result.toFixed(2));\n    // const result = getExchange.result.toFixed(2);\n    return setConvertAmount(32);\n    // setConvertAmount(+result);\n  };\n\n  useEffect(() => {\n    // getJsonApiArray()\n    //   .then((curr) => dispatch(setCurrenciesActionCreator(curr)));\n    dispatch(SetRenderOutputActionCreator(false));\n    dispatch(setCurrenciesActionCreator(getJsonApiArray));\n  }, []);\n\n  return (\n    <form className=\"convertor\">\n      <h3 className=\"convertor__title\">Currency Convertor</h3>\n      <div className=\"convertor__conteiner mb-3\">\n        <label htmlFor=\"amount\" className=\"form-label\">\n          Enter Ammount\n        </label>\n        <input\n          placeholder=\"Example: 100 uah in usd or 100\"\n          className=\"convertor__input\"\n          type=\"text\"\n          name=\"amount\"\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => handleChange(e)}\n        />\n      </div>\n      <div className=\"convertor__selectors\">\n        <Search\n          type=\"from\"\n        />\n        <button\n          className=\"convertor__invert btn btn-primary\"\n          type=\"button\"\n          onClick={invertCurrencies}\n        >\n          <FontAwesomeIcon icon={faRotate} />\n        </button>\n        <Search\n          type=\"to\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <button\n          type=\"button\"\n          onClick={(e) => convertRes(e)}\n          className=\"btn btn-primary w-100\"\n        >\n          Convert\n        </button>\n      </div>\n      <div className=\"convertor__inner\">\n        <h4>\n          {renderResult\n          && `${amount} ${selectedFrom.slice(0,3)} = ${convertAmount} ${selectedTo.slice(0,3)}`}\n        </h4>\n      </div>\n    </form>\n  );\n};\nfunction setInvert(arg0: boolean): any {\n  throw new Error('Function not implemented.');\n}\n\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getExchangeratesData } from '../../api';\nimport { getBase, getCurrenciesSelector, getRenderOutput, grtExchangeRates } from '../../store/selectors';\nimport './currenciesList.scss';\nimport { FC, useEffect } from 'react';\nimport { setExchangeRatesActionCreator } from '../../store/actions';\nimport { Search } from '../search';\nimport { exch } from '../../api/consts';\n\nexport const CurrenciesList: FC = () => {\n  const dispatch = useDispatch();\n  // const currencies = useSelector(getCurrenciesSelector);\n  const exchangeArr = useSelector(grtExchangeRates);\n  const baseValue = useSelector(getBase);\n  // const isRenderOk = useSelector(getRenderOutput);\n  const arr = Object.entries(exch);\n  const combineArr = arr.filter(item => exchangeArr.includes(item[0]) && item[0] !== baseValue);\n\n  // if ()\n\n  useEffect(() => {\n    // getExchangeratesData();\n    //  .then(console.log);\n      //  (exchange) => dispatch(setListExchangeActionCreator(exchange)));\n  },[]);\n\n  return (\n    <div className=\"List\">\n      <h3>List Of Exchange Rates</h3>\n      <Search type=\"base\" />\n      <ul className=\"list-group list-group-flush\">\n        {combineArr.map((item: string[]) => (\n          <li className=\"List__item list-group-item list-group-item-dark\" key={item[0]}>\n            {`1 ${baseValue.slice(0.3)} = ${Number(item[1]).toFixed(2)} ${item[0]}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport './App.scss';\nimport { Exchange } from './components/Exchange';\nimport { CurrenciesList } from './components/ListCurr';\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"app\">\n      <nav className=\"app__nav\">\n        <Link\n          to=\"/\"\n          className=\"app__btn btn btn-pink\"\n          role=\"button\"\n        >\n          Home\n        </Link>\n        <Link\n          to=\"/list\"\n          className=\"app__btn btn btn-pink\"\n          role=\"button\"\n        >\n          List Exchange Rates\n        </Link>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Exchange/>} />\n        <Route path=\"/list\" element={<CurrenciesList/>} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}