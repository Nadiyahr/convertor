{"version":3,"sources":["store/types.ts","store/index.ts","api/consts.ts","api/index.ts","store/actions.ts","store/selectors.ts","components/Search/search.tsx","components/Calculator/calculator.tsx","components/ListCurr/currenciesList.tsx","App.tsx","index.tsx"],"names":["ActionsTypes","initialState","currencies","fromCurr","toCurr","arrDataFilter","exchangeRates","base","renderOutput","reverse","store","createStore","state","action","type","SetCurrencies","payload","SetFrom","SetTo","SetArrDataFilter","SetExchangeRates","SetBase","SetRenderOutput","SetReverse","composeWithDevTools","BASE_URL","myHeaders","Headers","append","requestOptions","method","headers","getExchangeRates","amount","from","to","fetch","slice","then","response","text","result","JSON","parse","setFromActionCreator","setToActionCreator","setArrDataFilterActionCreator","SetRenderOutputActionCreator","SetReverseActionCreator","getCurrenciesSelector","getFromSlector","getToSelector","getArrDataFilter","grtExchangeRates","getBase","getRenderOutput","getReverse","Search","props","dispatch","useDispatch","arrData","useSelector","fromValue","toValue","baseValue","invert","useState","internFrom","setInternFrom","internTo","setInternTo","internBase","setInternBase","displaySelect","setDisplaySelect","onClickLi","str","useEffect","className","htmlFor","style","textTransform","placeholder","name","id","value","typeProps","setValue","onChange","e","ev","typeS","target","toUpperCase","filtredArr","filter","data","toLowerCase","includes","onCange","onFocus","selectType","maxLength","icon","faCaretUp","faCaretDown","map","onClick","join","Exchange","selectedFrom","selectedTo","renderResult","setAmount","convertAmount","setConvertAmount","validator","enterValue","isNaN","test","convertRes","a","preventDefault","newFrom","replace","trim","newTo","find","x","getExchange","toFixed","event","handleChange","temoraryFtom","faRotate","CurrenciesList","exchangeArr","resultRates","setResultRates","combineArr","item","res","rates","getExchangeratesData","Object","entries","val","Number","App","symbols","curr","role","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70ef42b7.chunk.js","sourcesContent":["import { Action as BaseAction } from 'redux';\n\nexport interface State {\n  currencies: string[][],\n  // currencies: Currency[],\n  fromCurr: string,\n  toCurr: string,\n  arrDataFilter: string[][],\n  // arrDataFilter: Currency[],\n  exchangeRates: string[],\n  base: string,\n  renderOutput: boolean,\n  reverse: boolean,\n}\n\nexport interface Action<T, P> extends BaseAction<T> {\n  payload: P,\n}\n\nexport enum ActionsTypes {\n  SetCurrencies = 'SetCurrencies',\n  SetFrom = 'SetFrom',\n  SetTo = 'SetTo',\n  SetArrDataFilter = 'SetFilter',\n  SetExchangeRates = 'SetExchangeRates',\n  SetBase = 'SetBase',\n  SetRenderOutput = 'SetRenderOutput',\n  SetReverse = 'SetReverse',\n}\n\nexport type SetCurrenciesAction = Action<ActionsTypes.SetCurrencies, string[][]>;\nexport type SetFromAction = Action<ActionsTypes.SetFrom, string>;\nexport type SetToAction = Action<ActionsTypes.SetTo, string>;\nexport type SetArrDataFilterAction = Action<ActionsTypes.SetArrDataFilter, string[][]>;\nexport type SetExchangeRatesAction = Action<ActionsTypes.SetExchangeRates, string[]>;\nexport type SetBaseAction = Action<ActionsTypes.SetBase, string>;\nexport type SetRenderOutputAction = Action<ActionsTypes.SetRenderOutput, boolean>;\nexport type SetReverseAction = Action<ActionsTypes.SetReverse, boolean>;\n\n\nexport type Actions = SetCurrenciesAction\n  | SetFromAction\n  | SetToAction\n  | SetArrDataFilterAction\n  | SetExchangeRatesAction\n  | SetBaseAction\n  | SetRenderOutputAction\n  | SetReverseAction;\n","import { createStore, Reducer } from 'redux';\nimport { composeWithDevTools } from '@redux-devtools/extension';\nimport { State, Actions, ActionsTypes } from './types';\n\nconst initialState: State = {\n  currencies: [],\n  fromCurr: 'UAH Ukrainian Hryvnia',\n  toCurr: 'USD United States Dollar',\n  arrDataFilter: [],\n  exchangeRates: ['USD','EUR','PLN','CZK','GBP','UAH'],\n  base: 'UAH',\n  renderOutput: true,\n  reverse: false,\n};\n\nconst reducer: Reducer<State, Actions> = (state = initialState, action): State => {\n  switch (action.type) {\n    case ActionsTypes.SetCurrencies:\n      return {\n        ...state,\n        currencies: [...state.currencies, ...action.payload],\n      };\n\n    case ActionsTypes.SetFrom:\n      return {\n        ...state,\n        fromCurr: action.payload,\n      };\n\n    case ActionsTypes.SetTo:\n      return {\n        ...state,\n        toCurr: action.payload,\n      };\n\n    case ActionsTypes.SetArrDataFilter:\n      return {\n        ...state,\n        arrDataFilter: action.payload,\n      };\n\n    case ActionsTypes.SetExchangeRates:\n      return {\n        ...state,\n        exchangeRates: [...state.exchangeRates, ...action.payload],\n      };\n\n    case ActionsTypes.SetBase:\n      return {\n        ...state,\n        base: action.payload,\n      };\n\n    case ActionsTypes.SetRenderOutput:\n      return {\n        ...state,\n        renderOutput: action.payload,\n      };\n\n    case ActionsTypes.SetReverse:\n      return {\n        ...state,\n        reverse: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, composeWithDevTools());\n","// export const BASE_URL = 'https://api.apilayer.com/fixer';\nexport const BASE_URL = 'https://api.apilayer.com/exchangerates_data';\nconst myHeaders = new Headers();\n\n//myHeaders.append('apikey'', 'QcNkBWCbg01lRNKI6H64YumEVU0shxS7');\nmyHeaders.append('apikey', 'VrLd2rRsJm6EN0BsvafaQkLbWvU2jl91');\n\nexport const requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BASE_URL, requestOptions } from \"./consts\";\n\n\nexport const getJsonApiArray = (): Promise<string[][]> => {\n  return fetch(`${BASE_URL}/symbols`, requestOptions)\n    .then(res => res.text())\n    .then(result => JSON.parse(result))\n    .then(data => Object.entries(data.symbols));\n};\n\nexport const getExchangeRates = (amount: string, from: string, to: string) => {\n  return fetch(`${BASE_URL}/convert?to=${to.slice(0,3)}&from=${from.slice(0,3)}&amount=${amount}`, requestOptions)\n    .then(response => response.text())\n    .then(result => JSON.parse(result));\n};\n\nexport const getExchangeratesData = (base = 'UAH'): Promise<Curr> => {\n  return fetch(`${BASE_URL}/latest?base=${base.slice(0,3)}`, requestOptions)\n    .then(res => res.text())\n    .then(result => JSON.parse(result))\n    .then(data => data.rates);\n};\n","import {\n  ActionsTypes,\n  SetArrDataFilterAction,\n  SetBaseAction,\n  SetCurrenciesAction,\n  SetExchangeRatesAction,\n  SetFromAction,\n  SetReverseAction,\n  SetRenderOutputAction,\n  SetToAction,\n} from './types';\n\nexport const setCurrenciesActionCreator = (payload: string[][]): SetCurrenciesAction => ({\n  type: ActionsTypes.SetCurrencies,\n  payload,\n});\n\nexport const setFromActionCreator = (payload: string): SetFromAction => ({\n  type: ActionsTypes.SetFrom,\n  payload,\n});\n\nexport const setToActionCreator = (payload: string): SetToAction => ({\n  type: ActionsTypes.SetTo,\n  payload,\n});\n\nexport const setArrDataFilterActionCreator = (payload: string[][]): SetArrDataFilterAction => ({\n  type: ActionsTypes.SetArrDataFilter,\n  payload,\n});\n\nexport const setExchangeRatesActionCreator = (payload: string[]): SetExchangeRatesAction => ({\n  type: ActionsTypes.SetExchangeRates,\n  payload,\n});\n\nexport const SetBaseActionCreator = (payload: string): SetBaseAction => ({\n  type: ActionsTypes.SetBase,\n  payload,\n});\n\nexport const SetRenderOutputActionCreator = (payload: boolean): SetRenderOutputAction => ({\n  type: ActionsTypes.SetRenderOutput,\n  payload,\n});\n\nexport const SetReverseActionCreator = (payload: boolean): SetReverseAction => ({\n  type: ActionsTypes.SetReverse,\n  payload,\n});\n","import { State } from './types';\n\nexport const getCurrenciesSelector = (state: State): string[][] => state.currencies;\nexport const getFromSlector = (state: State): string => state.fromCurr;\nexport const getToSelector = (state: State): string => state.toCurr;\nexport const getArrDataFilter = (state: State): string[][] => state.arrDataFilter;\nexport const grtExchangeRates = (state: State): string[] => state.exchangeRates;\nexport const getBase = (state: State): string => state.base;\nexport const getRenderOutput = (state: State): boolean => state.renderOutput;\nexport const getReverse = (state: State): boolean => state.reverse;\n\n","import React, { useEffect, useState } from 'react';\nimport './search.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getFromSlector,\n  getCurrenciesSelector,\n  getToSelector,\n  getArrDataFilter,\n  getBase,\n  getReverse,\n} from '../../store/selectors';\nimport {\n  setArrDataFilterActionCreator,\n  SetBaseActionCreator,\n  setFromActionCreator,\n  SetReverseActionCreator,\n  SetRenderOutputActionCreator,\n  setToActionCreator,\n} from '../../store/actions';\n// import { getJsonApiArray } from '../../api';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  type: string,\n};\n\nexport const Search: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const { type } = props;\n  const arrData = useSelector(getCurrenciesSelector);\n  const fromValue = useSelector(getFromSlector);\n  const toValue = useSelector(getToSelector);\n  const baseValue = useSelector(getBase);\n  const arrDataFilter = useSelector(getArrDataFilter);\n  const invert = useSelector(getReverse);\n  const [internFrom, setInternFrom] = useState(fromValue);\n  const [internTo, setInternTo] = useState(toValue);\n  const [internBase, setInternBase] = useState(baseValue);\n  const [displaySelect, setDisplaySelect] = useState(false);\n\n  const setValue = (typeProps: string) => {\n    switch (typeProps){\n      case 'from':\n        return internFrom;\n\n      case 'to':\n        return internTo;\n\n      case 'base':\n        return internBase.slice(0,3);\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = (selectType: string) => {\n    setDisplaySelect(true);\n    dispatch(SetRenderOutputActionCreator(false));\n    dispatch(setArrDataFilterActionCreator(arrData));\n\n    switch (selectType) {\n      case 'from':\n        setInternFrom('');\n        return internFrom;\n\n      case 'to':\n        setInternTo('');\n        return internTo;\n\n      case 'base':\n        setInternBase('');\n        return internBase;\n\n      default:\n        break;\n    }\n  };\n\n  const onCange = (ev: React.ChangeEvent<HTMLInputElement>, typeS: string) => {\n    const { value } = ev.target;\n\n    setDisplaySelect(true);\n\n    switch (typeS) {\n      case 'from':\n        setInternFrom(value.toUpperCase());\n        break;\n\n      case 'to':\n        setInternTo(value.toUpperCase());\n        break;\n\n      case 'base':\n        setInternBase(value.toUpperCase());\n        break;\n\n      default:\n        break;\n    }\n\n    const filtredArr = arrData.filter((data) => value === ''\n      ? data\n      : data[0].toLowerCase().includes(value.toLowerCase()));\n\n    dispatch(setArrDataFilterActionCreator(filtredArr));\n  };\n\n  const onClickLi = (str: string, type: string) => {\n    switch (type) {\n      case 'from':\n        dispatch(setFromActionCreator(str));\n        setInternFrom(str);\n        dispatch(setArrDataFilterActionCreator(arrData));\n        return fromValue;\n\n      case 'to':\n        dispatch(setToActionCreator(str));\n        setInternTo(str);\n        dispatch(setArrDataFilterActionCreator(arrData));\n        return toValue;\n\n      case 'base':\n        dispatch(SetBaseActionCreator(str));\n        setInternBase(str.slice(0,3));\n        dispatch(setArrDataFilterActionCreator(arrData));\n        return baseValue;\n\n        default:\n          break;\n    }\n  };\n\n  useEffect(() => {\n    if (invert) {\n      setInternFrom(fromValue);\n      setInternTo(toValue);\n      dispatch(SetReverseActionCreator(false));\n    }  \n  }, [invert]);\n\n  return (\n    <div className=\"search\">\n      <label htmlFor=\"curr\" style={{textTransform: 'capitalize'}}>\n        {type}\n        <input\n          type=\"text\"\n          placeholder=\"Start typting for filter\"\n          className=\"search__input\"\n          name=\"currencies\"\n          id=\"curr\"\n          value={setValue(type)}\n          onChange={(e) => onCange(e, type)}\n          onFocus={() => onFocus(type)}\n          maxLength={3}\n        />\n        <div className=\"search__icon\">\n        {displaySelect\n        ? <FontAwesomeIcon icon={faCaretUp} />\n        : <FontAwesomeIcon icon={faCaretDown} />}\n        </div>\n      </label>\n      {displaySelect && (\n        <ul className=\"search__list list-group\">\n          {arrDataFilter.map((data: string[]) => (\n            <li\n              className=\"search__item list-group-item list-group-item-action\"\n              key={`${data[0]}${type}`}\n              onClick={() => {\n                onClickLi(data.join(' '), type);\n                setDisplaySelect(false);\n              }}\n            >\n              {`${data}`}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getExchangeRates } from '../../api';\nimport {\n  SetReverseActionCreator,\n  setFromActionCreator,\n  SetRenderOutputActionCreator,\n  setToActionCreator,\n} from '../../store/actions';\nimport {\n  getCurrenciesSelector,\n  getFromSlector,\n  getRenderOutput,\n  getToSelector,\n} from '../../store/selectors';\nimport { Search } from '../Search';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRotate } from '@fortawesome/free-solid-svg-icons';\nimport './calculator.scss';\n\nexport const Exchange = () => {\n  const dispatch = useDispatch();\n  const currencies = useSelector(getCurrenciesSelector);\n  const selectedFrom = useSelector(getFromSlector);\n  const selectedTo = useSelector(getToSelector);\n  const renderResult = useSelector(getRenderOutput);\n  const [amount, setAmount] = useState('');\n  const [convertAmount, setConvertAmount] = useState(0);\n  \n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'selectedFrom':\n        dispatch(setFromActionCreator(value));\n        break;\n\n      case 'selectedTo':\n        dispatch(setToActionCreator(value));\n        break;\n\n      case 'amount':\n        setAmount(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const invertCurrencies = () => {\n    const temoraryFtom = selectedFrom;\n\n    dispatch(setFromActionCreator(selectedTo));\n    dispatch(setToActionCreator(temoraryFtom));\n    dispatch(SetReverseActionCreator(true));\n  };\n\n  const validator = (enterValue: string) => {\n    if (!isNaN(+enterValue)) {\n      return true;\n    }\n\n    const RegExp = /^\\d+ [A-Z,a-z]{3} in [A-Z,a-z]{3}/g;\n\n    return RegExp.test(enterValue);\n  };\n\n  const convertRes = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (validator(amount)) {\n      if (isNaN(+amount)) {\n        const newFrom = amount.replace(/\\d/g, '').trim().slice(0,3).toUpperCase();\n        const newTo = amount.replace(/\\d/g, '').trim().slice(-3).toUpperCase();\n        dispatch(setFromActionCreator(currencies.find(x => x[0] === newFrom)!.join(' ')));\n        dispatch(setToActionCreator(currencies.find(x => x[0] === newTo)!.join(' ')));\n      }\n\n      const getExchange: Result = await getExchangeRates(amount.replace(/\\D/g, ''), selectedFrom.slice(0,3), selectedTo.slice(0,3));\n      const result = getExchange.result.toFixed(2);\n\n      dispatch(SetRenderOutputActionCreator(true));\n\n      return setConvertAmount(+result);\n    }\n  };\n\n  useEffect(() => {\n\n    dispatch(SetRenderOutputActionCreator(false));\n  }, []);\n\n  return (\n    <form className=\"convertor\">\n      <h3 className=\"convertor__title\">Currency Convertor</h3>\n      <div className=\"convertor__conteiner mb-3\">\n        <label htmlFor=\"amount\" className=\"form-label\">\n          Enter Ammount\n        </label>\n        <input\n          placeholder=\"Example: 100 uah in usd or 100\"\n          className=\"convertor__input\"\n          type=\"text\"\n          name=\"amount\"\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => handleChange(e)}\n        />\n      </div>\n      <div className=\"convertor__selectors\">\n        <Search\n          type=\"from\"\n        />\n        <button\n          className=\"convertor__invert btn btn-primary\"\n          type=\"button\"\n          onClick={invertCurrencies}\n        >\n          <FontAwesomeIcon icon={faRotate} />\n        </button>\n        <Search\n          type=\"to\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <button\n          type=\"button\"\n          onClick={(e) => convertRes(e)}\n          className=\"btn btn-primary w-100\"\n        >\n          Convert\n        </button>\n      </div>\n      <div className=\"convertor__inner\">\n        <h4>\n          {renderResult\n          && `${amount} ${selectedFrom.slice(0,3)} = ${convertAmount} ${selectedTo.slice(0,3)}`}\n        </h4>\n      </div>\n    </form>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getBase, grtExchangeRates } from '../../store/selectors';\nimport { Search } from '../Search';\nimport { getExchangeratesData } from '../../api';\nimport './currenciesList.scss';\n\nexport const CurrenciesList: FC = () => {\n  const exchangeArr = useSelector(grtExchangeRates);\n  const baseValue = useSelector(getBase);\n  const [resultRates, setResultRates] = useState<string[][]>([]);\n  const combineArr = resultRates.filter(item => exchangeArr.includes(item[0]) && item[0] !== baseValue);\n\n  const convert = (val: string) => {\n    const number = 1 / Number(val);\n\n    return number.toFixed(2);\n  };\n\n  useEffect(() => {\n    getExchangeratesData(baseValue)\n      .then(data => setResultRates(Object.entries(data)));\n  },[baseValue]);\n\n  return (\n    <div className=\"List\">\n      <h3>List Of Exchange Rates</h3>\n      <Search type=\"base\" />\n      <ul className=\"list-group list-group-flush\">\n        {combineArr.map((item: string[]) => (\n          <li className=\"List__item list-group-item list-group-item-dark\" key={item[0]}>\n            {`1 ${item[0]} = ${convert(item[1])} ${baseValue.slice(0,3)}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport { getJsonApiArray } from './api';\nimport { Exchange } from './components/Calculator';\nimport { CurrenciesList } from './components/ListCurr';\nimport { setCurrenciesActionCreator } from './store/actions';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getJsonApiArray()\n        .then((curr) => dispatch(setCurrenciesActionCreator(curr)));\n\n  },[]);\n\n  return (\n    <div className=\"app\">\n      <nav className=\"app__nav\">\n        <Link\n          to=\"/\"\n          className=\"app__btn btn btn-pink\"\n          role=\"button\"\n        >\n          Calculator\n        </Link>\n        <Link\n          to=\"/list\"\n          className=\"app__btn btn btn-pink\"\n          role=\"button\"\n        >\n          List Exchange Rates\n        </Link>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Exchange/>} />\n        <Route path=\"/list\" element={<CurrenciesList/>} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}