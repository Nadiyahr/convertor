{"version":3,"sources":["store/types.ts","store/index.ts","api/consts.ts","api/index.ts","store/actions.ts","store/selectors.ts","components/search/search.tsx","components/Exchange/exchange.tsx","components/ListCurr/currenciesList.tsx","App.tsx","index.tsx"],"names":["ActionsTypes","initialState","currencies","fromCurr","toCurr","arrDataFilter","exchangeRates","base","renderOutput","reverse","store","createStore","state","action","type","SetCurrencies","payload","SetFrom","SetTo","SetArrDataFilter","SetExchangeRates","SetBase","SetRenderOutput","SetReverse","composeWithDevTools","BASE_URL","myHeaders","Headers","append","requestOptions","method","headers","getJsonApiArray","fetch","then","res","text","result","JSON","parse","data","Object","entries","symbols","getExchangeRates","amount","from","to","slice","response","setFromActionCreator","setToActionCreator","setArrDataFilterActionCreator","SetRenderOutputActionCreator","SetReverseActionCreator","getCurrenciesSelector","getFromSlector","getToSelector","getArrDataFilter","grtExchangeRates","getBase","getRenderOutput","getReverse","Search","props","dispatch","useDispatch","arrData","useSelector","fromValue","toValue","baseValue","invert","useState","internFrom","setInternFrom","internTo","setInternTo","internBase","setInternBase","displaySelect","setDisplaySelect","onClickLi","str","useEffect","length","className","htmlFor","style","textTransform","placeholder","name","id","value","typeProps","setValue","onChange","e","ev","typeS","target","toUpperCase","filtredArr","filter","toLowerCase","includes","console","log","onCange","onFocus","maxLength","onClick","prev","icon","faCaretUp","faCaretDown","map","Exchange","selectedFrom","selectedTo","renderResult","setAmount","convertAmount","setConvertAmount","convertRes","a","preventDefault","isNaN","newFrom","replace","trim","newTo","find","x","join","getExchange","toFixed","curr","event","handleChange","temoraryFtom","faRotate","CurrenciesList","exchangeArr","resultRates","setResultRates","combineArr","item","rates","getExchangeratesData","val","Number","App","role","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40158d10.chunk.js","sourcesContent":["import { Action as BaseAction } from 'redux';\n\nexport interface State {\n  currencies: string[][],\n  // currencies: Currency[],\n  fromCurr: string,\n  toCurr: string,\n  arrDataFilter: string[][],\n  // arrDataFilter: Currency[],\n  exchangeRates: string[],\n  base: string,\n  renderOutput: boolean,\n  reverse: boolean,\n}\n\nexport interface Action<T, P> extends BaseAction<T> {\n  payload: P,\n}\n\nexport enum ActionsTypes {\n  SetCurrencies = 'SetCurrencies',\n  SetFrom = 'SetFrom',\n  SetTo = 'SetTo',\n  SetArrDataFilter = 'SetFilter',\n  SetExchangeRates = 'SetExchangeRates',\n  SetBase = 'SetBase',\n  SetRenderOutput = 'SetRenderOutput',\n  SetReverse = 'SetReverse',\n}\n\nexport type SetCurrenciesAction = Action<ActionsTypes.SetCurrencies, string[][]>;\nexport type SetFromAction = Action<ActionsTypes.SetFrom, string>;\nexport type SetToAction = Action<ActionsTypes.SetTo, string>;\nexport type SetArrDataFilterAction = Action<ActionsTypes.SetArrDataFilter, string[][]>;\nexport type SetExchangeRatesAction = Action<ActionsTypes.SetExchangeRates, string[]>;\nexport type SetBaseAction = Action<ActionsTypes.SetBase, string>;\nexport type SetRenderOutputAction = Action<ActionsTypes.SetRenderOutput, boolean>;\nexport type SetReverseAction = Action<ActionsTypes.SetReverse, boolean>;\n\n\nexport type Actions = SetCurrenciesAction\n  | SetFromAction\n  | SetToAction\n  | SetArrDataFilterAction\n  | SetExchangeRatesAction\n  | SetBaseAction\n  | SetRenderOutputAction\n  | SetReverseAction;\n","import { createStore, Reducer } from 'redux';\nimport { composeWithDevTools } from '@redux-devtools/extension';\nimport { State, Actions, ActionsTypes } from './types';\n\nconst initialState: State = {\n  currencies: [],\n  fromCurr: 'UAH Ukrainian Hryvnia',\n  toCurr: 'USD United States Dollar',\n  arrDataFilter: [],\n  exchangeRates: ['USD','EUR','PLN','CZK','GBP','UAH'],\n  base: 'UAH',\n  renderOutput: true,\n  reverse: false,\n};\n\nconst reducer: Reducer<State, Actions> = (state = initialState, action): State => {\n  switch (action.type) {\n    case ActionsTypes.SetCurrencies:\n      return {\n        ...state,\n        currencies: [...state.currencies, ...action.payload],\n      };\n\n    case ActionsTypes.SetFrom:\n      return {\n        ...state,\n        fromCurr: action.payload,\n      };\n\n    case ActionsTypes.SetTo:\n      return {\n        ...state,\n        toCurr: action.payload,\n      };\n\n    case ActionsTypes.SetArrDataFilter:\n      return {\n        ...state,\n        arrDataFilter: action.payload,\n      };\n\n    case ActionsTypes.SetExchangeRates:\n      return {\n        ...state,\n        exchangeRates: [...state.exchangeRates, ...action.payload],\n      };\n\n    case ActionsTypes.SetBase:\n      return {\n        ...state,\n        base: action.payload,\n      };\n\n    case ActionsTypes.SetRenderOutput:\n      return {\n        ...state,\n        renderOutput: action.payload,\n      };\n\n    case ActionsTypes.SetReverse:\n      return {\n        ...state,\n        reverse: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, composeWithDevTools());\n","export const BASE_URL = 'https://api.apilayer.com/fixer';\n// export const BASE_URL = 'https://api.apilayer.com/exchangerates_data';\nconst myHeaders = new Headers();\n\n//myHeaders.append('apikey'', 'QcNkBWCbg01lRNKI6H64YumEVU0shxS7');\nmyHeaders.append('apikey', 'VrLd2rRsJm6EN0BsvafaQkLbWvU2jl91');\n\nexport const requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BASE_URL, requestOptions } from \"./consts\";\n\n\nexport const getJsonApiArray = (): Promise<string[][]> => {\n  return fetch(`${BASE_URL}/symbols`, requestOptions)\n    .then(res => res.text())\n    .then(result => JSON.parse(result))\n    .then(data => Object.entries(data.symbols));\n};\n\nexport const getExchangeRates = (amount: string, from: string, to: string) => {\n  return fetch(`${BASE_URL}/convert?to=${to.slice(0,3)}&from=${from.slice(0,3)}&amount=${amount}`, requestOptions)\n    .then(response => response.text())\n    .then(result => JSON.parse(result));\n};\n\nexport const getExchangeratesData = (base = 'UAH'): Promise<Curr> => {\n  return fetch(`${BASE_URL}/latest?base=${base.slice(0,3)}`, requestOptions)\n    .then(res => res.text())\n    .then(result => JSON.parse(result))\n    .then(data => data.rates);\n};\n","import {\n  ActionsTypes,\n  SetArrDataFilterAction,\n  SetBaseAction,\n  SetCurrenciesAction,\n  SetExchangeRatesAction,\n  SetFromAction,\n  SetReverseAction,\n  SetRenderOutputAction,\n  SetToAction,\n} from './types';\n\nexport const setCurrenciesActionCreator = (payload: string[][]): SetCurrenciesAction => ({\n  type: ActionsTypes.SetCurrencies,\n  payload,\n});\n\nexport const setFromActionCreator = (payload: string): SetFromAction => ({\n  type: ActionsTypes.SetFrom,\n  payload,\n});\n\nexport const setToActionCreator = (payload: string): SetToAction => ({\n  type: ActionsTypes.SetTo,\n  payload,\n});\n\nexport const setArrDataFilterActionCreator = (payload: string[][]): SetArrDataFilterAction => ({\n  type: ActionsTypes.SetArrDataFilter,\n  payload,\n});\n\nexport const setExchangeRatesActionCreator = (payload: string[]): SetExchangeRatesAction => ({\n  type: ActionsTypes.SetExchangeRates,\n  payload,\n});\n\nexport const SetBaseActionCreator = (payload: string): SetBaseAction => ({\n  type: ActionsTypes.SetBase,\n  payload,\n});\n\nexport const SetRenderOutputActionCreator = (payload: boolean): SetRenderOutputAction => ({\n  type: ActionsTypes.SetRenderOutput,\n  payload,\n});\n\nexport const SetReverseActionCreator = (payload: boolean): SetReverseAction => ({\n  type: ActionsTypes.SetReverse,\n  payload,\n});\n","import { State } from './types';\n\nexport const getCurrenciesSelector = (state: State): string[][] => state.currencies;\nexport const getFromSlector = (state: State): string => state.fromCurr;\nexport const getToSelector = (state: State): string => state.toCurr;\nexport const getArrDataFilter = (state: State): string[][] => state.arrDataFilter;\nexport const grtExchangeRates = (state: State): string[] => state.exchangeRates;\nexport const getBase = (state: State): string => state.base;\nexport const getRenderOutput = (state: State): boolean => state.renderOutput;\nexport const getReverse = (state: State): boolean => state.reverse;\n\n","import React, { useEffect, useState } from 'react';\nimport './search.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getFromSlector,\n  getCurrenciesSelector,\n  getToSelector,\n  getArrDataFilter,\n  getBase,\n  getReverse,\n} from '../../store/selectors';\nimport {\n  setArrDataFilterActionCreator,\n  SetBaseActionCreator,\n  setFromActionCreator,\n  SetReverseActionCreator,\n  SetRenderOutputActionCreator,\n  setToActionCreator,\n} from '../../store/actions';\nimport { getJsonApiArray } from '../../api';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  type: string,\n};\n\nexport const Search: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const { type } = props;\n  const arrData = useSelector(getCurrenciesSelector);\n  const fromValue = useSelector(getFromSlector);\n  const toValue = useSelector(getToSelector);\n  const baseValue = useSelector(getBase);\n  const arrDataFilter = useSelector(getArrDataFilter);\n  const invert = useSelector(getReverse);\n  const [internFrom, setInternFrom] = useState(fromValue);\n  const [internTo, setInternTo] = useState(toValue);\n  const [internBase, setInternBase] = useState(baseValue);\n  const [displaySelect, setDisplaySelect] = useState(false);\n\n  const setValue = (typeProps: string) => {\n    switch (typeProps){\n      case 'from':\n        return internFrom;\n\n      case 'to':\n        return internTo;\n\n      case 'base':\n        return internBase.slice(0,3);\n\n      default:\n        break;\n    }\n  };\n\n  const clickDown = () => {\n    setDisplaySelect(prev => !prev);\n  };\n\n  const onFocus = () => {\n    setDisplaySelect(true);\n    dispatch(SetRenderOutputActionCreator(false));\n\n    switch (type) {\n      case 'from':\n        setInternFrom('');\n        return internFrom;\n\n      case 'to':\n        setInternTo('');\n        return internTo;\n\n      case 'base':\n        setInternBase('');\n        return internBase;\n\n      default:\n        break;\n    }\n  };\n\n  const onCange = (ev: React.ChangeEvent<HTMLInputElement>, typeS: string) => {\n    const { value } = ev.target;\n\n    setDisplaySelect(true);\n\n    switch (typeS) {\n      case 'from':\n        setInternFrom(value.toUpperCase());\n        break;\n\n      case 'to':\n        setInternTo(value.toUpperCase());\n        break;\n\n      case 'base':\n        setInternBase(value.toUpperCase());\n        break;\n\n      default:\n        break;\n    }\n\n    const filtredArr = arrData.filter((data) => value === ''\n      ? data\n      : data[0].toLowerCase().includes(value.toLowerCase()));\n\n    console.log(filtredArr);\n    dispatch(setArrDataFilterActionCreator(filtredArr));\n    console.log(arrDataFilter);\n  };\n\n  const onClickLi = (str: string, type: string) => {\n    switch (type) {\n      case 'from':\n        dispatch(setFromActionCreator(str));\n        setInternFrom(str);\n        dispatch(setArrDataFilterActionCreator(arrData));\n        return fromValue;\n\n      case 'to':\n        dispatch(setToActionCreator(str));\n        setInternTo(str);\n        dispatch(setArrDataFilterActionCreator(arrData));\n        return toValue;\n\n      case 'base':\n        dispatch(SetBaseActionCreator(str));\n        setInternBase(str.slice(0,3));\n        dispatch(setArrDataFilterActionCreator(arrData));\n        return baseValue;\n\n        default:\n          break;\n    }\n  };\n\n  useEffect(() => {\n    if (arrData.length === 0) {\n      getJsonApiArray().then((data) => dispatch(setArrDataFilterActionCreator(data)));\n    }\n\n    if (invert) {\n      setInternFrom(fromValue);\n      setInternTo(toValue);\n      dispatch(SetReverseActionCreator(false));\n    }\n  \n  }, [invert]);\n\n  return (\n    <div className=\"search\">\n      <label htmlFor=\"curr\" style={{textTransform: 'capitalize'}}>\n        {type}\n        <input\n          type=\"text\"\n          placeholder=\"Start typting for filter\"\n          className=\"search__input\"\n          name=\"currencies\"\n          id=\"curr\"\n          value={setValue(type)}\n          onChange={(e) => onCange(e, type)}\n          onFocus={onFocus}\n          maxLength={3}\n        />\n        <div className=\"search__icon\" onClick={clickDown}>\n        {displaySelect\n        ? <FontAwesomeIcon icon={faCaretUp} />\n        : <FontAwesomeIcon icon={faCaretDown} />}\n        </div>\n      </label>\n      {displaySelect && (\n        <ul className=\"search__list list-group\">\n          {arrDataFilter.map((data: string[]) => (\n            <li\n              className=\"search__item list-group-item list-group-item-action\"\n              key={data[0]}\n              onClick={() => {\n                onClickLi(data[0], type);\n                setDisplaySelect(false);\n              }}\n            >\n              {`${data}`}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getExchangeRates, getJsonApiArray } from '../../api';\nimport {\n  SetReverseActionCreator,\n  setCurrenciesActionCreator,\n  setFromActionCreator,\n  SetRenderOutputActionCreator,\n  setToActionCreator,\n} from '../../store/actions';\nimport {\n  getCurrenciesSelector,\n  getFromSlector,\n  getRenderOutput,\n  getToSelector,\n} from '../../store/selectors';\nimport { Search } from '../search';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRotate } from '@fortawesome/free-solid-svg-icons';\nimport './exchange.scss';\n\nexport const Exchange = () => {\n  const dispatch = useDispatch();\n  const currencies = useSelector(getCurrenciesSelector);\n  const selectedFrom = useSelector(getFromSlector);\n  const selectedTo = useSelector(getToSelector);\n  const renderResult = useSelector(getRenderOutput);\n  const [amount, setAmount] = useState('');\n  const [convertAmount, setConvertAmount] = useState(0);\n  \n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'selectedFrom':\n        dispatch(setFromActionCreator(value));\n        break;\n\n      case 'selectedTo':\n        dispatch(setToActionCreator(value));\n        break;\n\n      case 'amount':\n        setAmount(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const invertCurrencies = () => {\n    const temoraryFtom = selectedFrom;\n\n    dispatch(setFromActionCreator(selectedTo));\n    dispatch(setToActionCreator(temoraryFtom));\n    dispatch(SetReverseActionCreator(true));\n  };\n\n  const convertRes = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n\n    if (isNaN(+amount)) {\n      const newFrom = amount.replace(/\\d/g, '').trim().slice(0,3).toUpperCase();\n      const newTo = amount.replace(/\\d/g, '').trim().slice(-3).toUpperCase();\n      dispatch(setFromActionCreator(currencies.find(x => x[0] === newFrom)!.join(' ')));\n      dispatch(setToActionCreator(currencies.find(x => x[0] === newTo)!.join(' ')));\n    }\n    const getExchange: Result = await getExchangeRates(amount.replace(/\\D/g, ''), selectedFrom.slice(0,3), selectedTo.slice(0,3));\n    const result = getExchange.result.toFixed(2);\n\n    dispatch(SetRenderOutputActionCreator(true));\n\n    return setConvertAmount(+result);\n  };\n\n  useEffect(() => {\n    if (currencies.length === 0) {\n      getJsonApiArray()\n        .then((curr) => dispatch(setCurrenciesActionCreator(curr)));\n    }\n    dispatch(SetRenderOutputActionCreator(false));\n  }, []);\n\n  return (\n    <form className=\"convertor\">\n      <h3 className=\"convertor__title\">Currency Convertor</h3>\n      <div className=\"convertor__conteiner mb-3\">\n        <label htmlFor=\"amount\" className=\"form-label\">\n          Enter Ammount\n        </label>\n        <input\n          placeholder=\"Example: 100 uah in usd or 100\"\n          className=\"convertor__input\"\n          type=\"text\"\n          name=\"amount\"\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => handleChange(e)}\n        />\n      </div>\n      <div className=\"convertor__selectors\">\n        <Search\n          type=\"from\"\n        />\n        <button\n          className=\"convertor__invert btn btn-primary\"\n          type=\"button\"\n          onClick={invertCurrencies}\n        >\n          <FontAwesomeIcon icon={faRotate} />\n        </button>\n        <Search\n          type=\"to\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <button\n          type=\"button\"\n          onClick={(e) => convertRes(e)}\n          className=\"btn btn-primary w-100\"\n        >\n          Convert\n        </button>\n      </div>\n      <div className=\"convertor__inner\">\n        <h4>\n          {renderResult\n          && `${amount} ${selectedFrom.slice(0,3)} = ${convertAmount} ${selectedTo.slice(0,3)}`}\n        </h4>\n      </div>\n    </form>\n  );\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getBase, grtExchangeRates } from '../../store/selectors';\nimport { Search } from '../search';\nimport { getExchangeratesData } from '../../api';\nimport './currenciesList.scss';\n\nexport const CurrenciesList: FC = () => {\n  const exchangeArr = useSelector(grtExchangeRates);\n  const baseValue = useSelector(getBase);\n  const [resultRates, setResultRates] = useState<string[][]>([]);\n  const combineArr = resultRates.filter(item => exchangeArr.includes(item[0]) && item[0] !== baseValue);\n\n  const convert = (val: string) => {\n    const number = 1 / Number(val);\n\n    return number.toFixed(2);\n  };\n\n  useEffect(() => {\n    getExchangeratesData(baseValue).then(data => setResultRates(Object.entries(data)));\n  },[baseValue]);\n\n  return (\n    <div className=\"List\">\n      <h3>List Of Exchange Rates</h3>\n      <Search type=\"base\" />\n      <ul className=\"list-group list-group-flush\">\n        {combineArr.map((item: string[]) => (\n          <li className=\"List__item list-group-item list-group-item-dark\" key={item[0]}>\n            {`1 ${item[0]} = ${convert(item[1])} ${baseValue.slice(0.3)}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport './App.scss';\nimport { Exchange } from './components/Exchange';\nimport { CurrenciesList } from './components/ListCurr';\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"app\">\n      <nav className=\"app__nav\">\n        <Link\n          to=\"/\"\n          className=\"app__btn btn btn-pink\"\n          role=\"button\"\n        >\n          Calculator\n        </Link>\n        <Link\n          to=\"/list\"\n          className=\"app__btn btn btn-pink\"\n          role=\"button\"\n        >\n          List Exchange Rates\n        </Link>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Exchange/>} />\n        <Route path=\"/list\" element={<CurrenciesList/>} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}